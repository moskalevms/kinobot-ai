# src/llm/llm_router.py
import os
from typing import Optional, List, Dict
from .gigachat_client import GigaChatClient

class LLMRouter:
    def __init__(self):
        self.models = []

        gigachat_auth_key = os.getenv("GIGACHAT_AUTH_KEY")
        if gigachat_auth_key:
            try:
                self.models.append({
                    "name": "gigachat",
                    "client": GigaChatClient(),
                    "type": "gigachat"
                })
                print("[LLM] ‚úÖ GigaChat –¥–æ–±–∞–≤–ª–µ–Ω (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è GIGACHAT_AUTH_KEY –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞)")
            except Exception as e:
                print(f"[LLM] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GigaChat: {e}")
        else:
            print("[LLM] ‚ö†Ô∏è GIGACHAT_AUTH_KEY –Ω–µ —É–∫–∞–∑–∞–Ω ‚Äî GigaChat –æ—Ç–∫–ª—é—á–µ–Ω")

        # üîΩ –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º DeepSeek —á–µ—Ä–µ–∑ —Ñ–ª–∞–≥ (–Ω–∞ –±—É–¥—É—â–µ–µ)
        enable_deepseek = os.getenv("ENABLE_DEEPSEEK", "false").lower() == "true"
        if enable_deepseek:
            deepseek_key = os.getenv("DEEPSEEK_API_KEY")
            deepseek_base = os.getenv("DEEPSEEK_BASE_URL", "https://api.deepseek.com/v1").strip()  # ‚Üê –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
            if deepseek_key:
                try:
                    from openai import OpenAI
                    self.models.append({
                        "name": "deepseek",
                        "client": OpenAI(api_key=deepseek_key, base_url=deepseek_base),
                        "type": "openai"
                    })
                    print("[LLM] ‚úÖ DeepSeek –¥–æ–±–∞–≤–ª–µ–Ω")
                except ImportError:
                    print("[LLM] ‚ùå –ú–æ–¥—É–ª—å openai –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚Äî DeepSeek –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print("[LLM] ‚ö†Ô∏è DEEPSEEK_API_KEY –Ω–µ —É–∫–∞–∑–∞–Ω ‚Äî DeepSeek –Ω–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–∂–µ –ø—Ä–∏ ENABLE_DEEPSEEK=true")

        if not self.models:
            raise ValueError("–ù–µ —É–∫–∞–∑–∞–Ω—ã –∫–ª—é—á–∏ API –¥–ª—è GigaChat (GIGACHAT_API_KEY) –∏–ª–∏ DeepSeek (–µ—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω)")

    def call_llm(self, messages: List[Dict[str, str]], max_tokens: int = 500) -> Optional[str]:
        for model in self.models:
            try:
                print(f"[LLM] –ü—Ä–æ–±—É–µ–º {model['name']}...")
                if model["type"] == "gigachat":
                    result = model["client"].chat_completions_create(
                        model="GigaChat",
                        messages=messages,
                        max_tokens=max_tokens,
                        temperature=0.3
                    )
                else:  # openai-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π (DeepSeek, –µ—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω)
                    response = model["client"].chat.completions.create(
                        model="deepseek-chat",
                        messages=messages,
                        max_tokens=max_tokens,
                        temperature=0.3,
                        timeout=30
                    )
                    result = response.choices[0].message.content.strip()

                print(f"[LLM] ‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç {model['name']}")
                return result
            except Exception as e:
                print(f"[LLM] ‚ùå {model['name']} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
                continue

        print("[LLM] ‚ùå –í—Å–µ LLM –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        return None