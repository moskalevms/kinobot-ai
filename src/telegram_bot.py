# telegram_bot.py
import os
import logging
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes
)
from src.llm.dialog_agent import DialogMovieAgent
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–∞ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
agent = DialogMovieAgent()


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_text = (
        "üé¨ –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –∫–∏–Ω–æ–ø–æ–º–æ—â–Ω–∏–∫.\n\n"
        "–ù–∞–ø–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å:\n"
        "‚Ä¢ ¬´–õ—ë–≥–∫–∞—è –∫–æ–º–µ–¥–∏—è¬ª\n"
        "‚Ä¢ ¬´–§–∏–ª—å–º—ã —Å –î–∏–ö–∞–ø—Ä–∏–æ¬ª\n"
        "‚Ä¢ ¬´–õ—É—á—à–∏–µ –±–æ–µ–≤–∏–∫–∏ 2005 –≥–æ–¥–∞¬ª\n"
        "‚Ä¢ ¬´–†–∞—Å—Å–∫–∞–∂–∏ –æ –¢–∏—Ç–∞–Ω–∏–∫–µ¬ª\n\n"
        "–Ø –ø–æ–¥–±–µ—Ä—É —Ñ–∏–ª—å–º—ã –ø–æ —Ç–≤–æ–µ–º—É –≤–∫—É—Å—É! üçø"
    )
    await update.message.reply_text(welcome_text)


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_message = update.message.text.strip()
    user_id = update.effective_user.id

    if not user_message:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –∑–∞–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º.")
        return

    logger.info(f"[Telegram] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}: {user_message}")

    try:
        # –í—ã–∑—ã–≤–∞–µ–º –≤–∞—à –∞–≥–µ–Ω—Ç
        result = agent.chat(user_message, history=[])
        response = result.get("response", "–ò–∑–≤–∏–Ω–∏, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòî")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        await update.message.reply_text(response, parse_mode="HTML")

    except Exception as e:
        logger.error(f"[Telegram] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}", exc_info=True)
        await update.message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
        )


async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫"""
    logger.error(f"Update {update} –≤—ã–∑–≤–∞–ª –æ—à–∏–±–∫—É {context.error}")


def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    if not token:
        raise ValueError(
            "–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TELEGRAM_BOT_TOKEN –≤ —Ñ–∞–π–ª–µ .env"
        )

    app = Application.builder().token(token).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    app.add_error_handler(error_handler)

    logger.info("Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω (long polling)...")
    app.run_polling()


if __name__ == "__main__":
    main()